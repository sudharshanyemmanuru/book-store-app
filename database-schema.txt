#step1 :    create database book_store_application_backend_bd;
            use book_store_application_backend_bd;

#step2 :     create table new_user(
	              new_user_id int primary key auto_increment not null,
                first_name text not null,
                middle_name text,
                last_name text not null,
                email_id text not null,
                contact_number varchar(20) not null,
                date_of_birth varchar(20) not null
            );
            alter table new_user add column is_verified varchar(10);

#step3 :  create table roles(
	          role_id int primary key auto_increment not null,
            role_name varchar(20) not null
          );
          insert into roles(role_name) values('ROLE_ADMIN');//for admin role
          insert into roles(role_name) values('ROLE_USER');//for user role

#step4:   create table user_authentication_authorization_info(
	            auth_id int primary key auto_increment not null,
              user_name varchar(40) not null,
              password varchar(40) not null,
              user_id int not null,
              role_id int not null,
              foreign key(role_id) references roles(role_id),
              foreign key(user_id) references new_user(new_user_id)
          );
          insert into user_authentication_authorization_info(user_name,password,user_id,role_id)values('admin@gmail.com','123',2,1);//admin account

#step5:  create table new_user_profile_picture(
	          user_profile_pic_id varchar(500) primary key not null,
            profile_image_data longblob not null,
            user_id int,
            foreign key(user_id) references new_user(new_user_id)
          );

#step6:  create table categeory(
	          categeory_id int primary key auto_increment not null,
            categeory_name varchar(40) not null
        );

#step7:  create table author(
	          author_id int primary key auto_increment not null,
            author_name varchar(50) not null,
            about_author text not null
        );

#step8:  create table book(
	          book_id int primary key auto_increment not null,
            book_name text not null,
            book_summary text not null,
            issued_at varchar(30) not null,
            book_cover_image_data blob,
            categeory_id int not null,
            author_id int not null,
            foreign key(categeory_id) references categeory(categeory_id),
            foreign key(author_id) references author(author_id)
        );
        alter table book modify book_cover_image_data longblob;
        alter table book add column price double;
        alter table book add column quantity int;


#step9:  create table cart(
	          cart_id int primary key auto_increment not null,
            user_id int,
            foreign key(user_id) references new_user(new_user_id)
        );

#step10:  create table cart_book(
	            cart_id int not null,
              book_id int not null,
              foreign key(cart_id) references cart(cart_id),
              foreign key(book_id) references book(book_id),
              primary key(cart_id,book_id)
          );

#step11:  create table address(
	            address_id int not null auto_increment primary key,
              street_name text,
              house_number text,
              locality text,
              contact_number text,
              total_amount int
          );

#step12:   create table orders(
	              order_id varchar(500) primary key not null,
                user_id int,
                address_id int,
                foreign key(user_id) references new_user(new_user_id),
                foreign key(address_id) references address(address_id)
            );

#step13:   create table orders_book(
	            order_id varchar(500) not null,
              book_id int not null,
              foreign key(order_id) references orders(order_id),
              foreign key(book_id) references book(book_id),
              primary key(order_id,book_id)
          );

#step14:  create table review(
	            review_id int primary key not null auto_increment,
              review_text text not null,
              book_id int not null,
              user_id int not null,
              foreign key(book_id) references book(book_id),
              foreign key(user_id) references new_user(new_user_id)
          );
          alter table review add column rating int;
